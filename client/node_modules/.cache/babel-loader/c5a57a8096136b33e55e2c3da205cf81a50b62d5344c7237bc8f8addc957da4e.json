{"ast":null,"code":"export const convertToWorkerObjects = data => {\n  // An array of headers from the CSV file\n  const headers = ['friendlyName', 'contact_uri', 'full_name', 'email', 'roles', 'skills', 'language'];\n\n  // Maps the data from the CSV file into worker objects\n  const workerObjects = data\n  // Filters out the header row\n  .filter((row, index) => index !== 0).map(row => {\n    const worker = {};\n    headers.forEach((header, index) => {\n      // Adds the friendlyName to the worker object\n      if (header === 'friendlyName') {\n        worker[header] = row[index];\n      }\n      // Adds the roles and skills to the worker attributes object\n      else if (header === 'roles' || header === 'skills') {\n        worker.attributes = worker.attributes || {};\n        // Converts the comma-separated string into an array\n        worker.attributes[header] = row[index].split(',');\n      }\n      // Adds the remaining attributes to the worker attributes object\n      else {\n        worker.attributes = worker.attributes || {};\n        worker.attributes[header] = row[index];\n      }\n    });\n    return worker;\n  });\n  return workerObjects;\n};","map":{"version":3,"names":["convertToWorkerObjects","data","headers","workerObjects","filter","row","index","map","worker","forEach","header","attributes","split"],"sources":["/Users/nicolas.sementilli/Documents/Best Buy/Code/worker-csv/src/utils/convertToWorkerObjects.js"],"sourcesContent":["export const convertToWorkerObjects = (data) => {\n  // An array of headers from the CSV file\n  const headers = [\n    'friendlyName',\n    'contact_uri',\n    'full_name',\n    'email',\n    'roles',\n    'skills',\n    'language',\n  ];\n\n  // Maps the data from the CSV file into worker objects\n  const workerObjects = data\n    // Filters out the header row\n    .filter((row, index) => index !== 0)\n    .map((row) => {\n      const worker = {};\n      headers.forEach((header, index) => {\n        // Adds the friendlyName to the worker object\n        if (header === 'friendlyName') {\n          worker[header] = row[index];\n        }\n        // Adds the roles and skills to the worker attributes object\n        else if (header === 'roles' || header === 'skills') {\n          worker.attributes = worker.attributes || {};\n          // Converts the comma-separated string into an array\n          worker.attributes[header] = row[index].split(',');\n        }\n        // Adds the remaining attributes to the worker attributes object\n        else {\n          worker.attributes = worker.attributes || {};\n          worker.attributes[header] = row[index];\n        }\n      });\n      return worker;\n    });\n\n  return workerObjects;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EAC9C;EACA,MAAMC,OAAO,GAAG,CACd,cAAc,EACd,aAAa,EACb,WAAW,EACX,OAAO,EACP,OAAO,EACP,QAAQ,EACR,UAAU,CACX;;EAED;EACA,MAAMC,aAAa,GAAGF;EACpB;EAAA,CACCG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CACnCC,GAAG,CAAEF,GAAG,IAAK;IACZ,MAAMG,MAAM,GAAG,CAAC,CAAC;IACjBN,OAAO,CAACO,OAAO,CAAC,CAACC,MAAM,EAAEJ,KAAK,KAAK;MACjC;MACA,IAAII,MAAM,KAAK,cAAc,EAAE;QAC7BF,MAAM,CAACE,MAAM,CAAC,GAAGL,GAAG,CAACC,KAAK,CAAC;MAC7B;MACA;MAAA,KACK,IAAII,MAAM,KAAK,OAAO,IAAIA,MAAM,KAAK,QAAQ,EAAE;QAClDF,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACG,UAAU,IAAI,CAAC,CAAC;QAC3C;QACAH,MAAM,CAACG,UAAU,CAACD,MAAM,CAAC,GAAGL,GAAG,CAACC,KAAK,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC;MACnD;MACA;MAAA,KACK;QACHJ,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACG,UAAU,IAAI,CAAC,CAAC;QAC3CH,MAAM,CAACG,UAAU,CAACD,MAAM,CAAC,GAAGL,GAAG,CAACC,KAAK,CAAC;MACxC;IACF,CAAC,CAAC;IACF,OAAOE,MAAM;EACf,CAAC,CAAC;EAEJ,OAAOL,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}